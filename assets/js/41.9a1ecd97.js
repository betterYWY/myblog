(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{622:function(t,a,v){"use strict";v.r(a);var _=v(5),e=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"量词"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[t._v("#")]),t._v(" 量词")]),t._v(" "),v("p",[t._v("如果需要匹配多次某个字符，正则也提供了量词的功能，正则中的量词有多个，如?、+、*、{n}、{m,n}、{m,}")]),t._v(" "),v("p",[t._v("？\t匹配0次或1次，优先匹配1次，相当于{0,1}")]),t._v(" "),v("p",[t._v("* \t 匹配0-n次，优先匹配n次，相当于{0,}")]),t._v(" "),v("p",[t._v("+\t  匹配1-n次，优先匹配n次，相当于{1,}")]),t._v(" "),v("p",[t._v("{n}\t匹配n次，比如a{2}，匹配aa")]),t._v(" "),v("p",[t._v("{m, n}  匹配m-n次，优先匹配n次，比如a{1,3}，可以匹配aaa、aa、a")]),t._v(" "),v("p",[t._v("{m,}  匹配m-∞次，优先匹配∞次，比如a{1,}，可以匹配aaaa...")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"}),v("p",[t._v("正则默认为贪婪模式，凡是表示范围的量词，都优先匹配上限而不是下限"),v("br"),t._v("\n可以在量词后面加上 ? ，将贪婪模式切换为懒惰模式，尽可能少的去匹配"),v("br"),t._v(" "),v("code",[t._v("a{1, 3}? // 匹配字符串'aaa'的话，会匹配a而不是aaa")])])]),v("h2",{attrs:{id:"字符集合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符集合"}},[t._v("#")]),t._v(" 字符集合")]),t._v(" "),v("p",[t._v("有时我们需要匹配一类字符，字符集可以实现这个功能，字符集的语法用[]分隔\n"),v("code",[t._v("[abc] //匹配a或b或c")]),v("br"),t._v("\n在前面添加^，可表示非的意思^。在[]外表示匹配开头的意思\n"),v("code",[t._v("[^abc] //匹配abc之外的任意字符")])]),t._v(" "),v("h3",{attrs:{id:"内置字符集合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内置字符集合"}},[t._v("#")]),t._v(" 内置字符集合")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("字符")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("\\d")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配一个数字字符。等价于 [0-9]。")])]),t._v(" "),v("tr",[v("td",[t._v("\\D")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配一个非数字字符。等价于 [^0-9]。")])]),t._v(" "),v("tr",[v("td",[t._v("\\s")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]。")])]),t._v(" "),v("tr",[v("td",[t._v("\\S")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]。")])]),t._v(" "),v("tr",[v("td",[t._v("\\w")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配字母、数字、下划线。等价于'[A-Za-z0-9_]'。")])]),t._v(" "),v("tr",[v("td",[t._v("\\W")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配非字母、数字、下划线。等价于 '[^A-Za-z0-9_]'。")])]),t._v(" "),v("tr",[v("td",[t._v(".")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配除换行符（\\n、\\r）之外的任何单个字符。要匹配包括 '\\n' 在内的任何字符，请用像(.|\\n)的模式")])]),t._v(" "),v("tr",[v("td",[t._v("^")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 '\\n' 或 '\\r' 之后的位置。")])]),t._v(" "),v("tr",[v("td",[t._v("$")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 '\\n' 或 '\\r' 之前的位置。")])]),t._v(" "),v("tr",[v("td",[t._v("\\b")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("匹配一个单词边界，也就是指单词和空格间的位置。例如， 'er\\b' 可以匹配\"never\" 中的 'er'，但不能匹配 \"verb\" 中的 'er'。")])])])]),t._v(" "),v("h2",{attrs:{id:"字符边界"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符边界"}},[t._v("#")]),t._v(" 字符边界")]),t._v(" "),v("p",[t._v("有时我们会有边界的匹配要求，比如以xxx开头，以xxx结尾"),v("br"),t._v("\n^在[]外表示匹配开头的意思"),v("code",[t._v("^abc // 可以匹配abc，但是不能匹配aabc")]),v("br"),t._v("\n$表示匹配结尾的意思 "),v("code",[t._v("abc$ // 可以匹配abc，但是不能匹配abcc")]),v("br"),t._v("\n\\b表示单词的边界 "),v("code",[t._v("abc\\b // 可以匹配 abc ，但是不能匹配 abcc")])]),t._v(" "),v("h2",{attrs:{id:"分组与引用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分组与引用"}},[t._v("#")]),t._v(" 分组与引用")]),t._v(" "),v("p",[t._v("分组是正则中非常强大的一个功能，可以让上面提到的量词作用于一组字符，而非单个字符，分组的语法是圆括号包裹(xxx)"),v("br"),t._v(" "),v("code",[t._v("(abc){2} // 匹配abcabc")]),v("br"),t._v("\n分组不能放在[]中，分组中还可以使用选择表达式"),v("br"),t._v(" "),v("code",[t._v("(123|456){2} // 匹配 123123、456456、123456、456123")]),v("br"),t._v("\n和分组相关的概念还有一个捕获分组和非捕获分组，分组默认都是捕获的，在分组的(后面添加?:可以让分组变为非捕获分组，非捕获分组可以提高性能和简化逻辑\n"),v("code",[t._v("'123'.match(/(?123)/) // 返回 ['123']")]),v("br"),t._v(" "),v("code",[t._v("'123'.match(/(123)/) // 返回 ['123', '123']")]),v("br"),t._v("\n和分组相关的另一个概念是引用，比如在匹配html标签时，通常希望"),v("xxx"),t._v("后面的xxx能够和前面保持一致"),v("br"),t._v("\n引用的语法是\\数字，数字代表引用前面第几个捕获分组，注意非捕获分组不能被引用"),v("br"),t._v(" "),v("code",[t._v("<([a-z]+)><\\/\\1> // 可以匹配<span></span>或<div></div>等")])],1),t._v(" "),v("h2",{attrs:{id:"修饰符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),v("p",[t._v("标记也称为修饰符，正则表达式的标记用于指定额外的匹配策略。"),v("br"),t._v("\n标记不写在正则表达式里，标记位于表达式之外，格式如下："),v("br"),t._v(" "),v("code",[t._v("/pattern/flags")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("修饰符")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("含义")]),t._v(" "),v("th",{staticStyle:{"text-align":"right"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("i")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("ignore - 不区分大小写")]),t._v(" "),v("td",{staticStyle:{"text-align":"right"}},[t._v("将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。")])]),t._v(" "),v("tr",[v("td",[t._v("g")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("global - 全局匹配")]),t._v(" "),v("td",{staticStyle:{"text-align":"right"}},[t._v("查找所有的匹配项。")])]),t._v(" "),v("tr",[v("td",[t._v("m")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("multi line - 多行匹配")]),t._v(" "),v("td",{staticStyle:{"text-align":"right"}},[t._v("使边界字符 ^ 和 $ 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。")])]),t._v(" "),v("tr",[v("td",[t._v("s")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("特殊字符圆点 . 中包含换行符 \\n")]),t._v(" "),v("td",{staticStyle:{"text-align":"right"}},[t._v("默认情况下的圆点 . 是匹配除换行符 \\n 之外的任何字符，加上 s 修饰符之后, . 中包含换行符 \\n。")])])])]),t._v(" "),v("h2",{attrs:{id:"断言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#断言"}},[t._v("#")]),t._v(" 断言")]),t._v(" "),v("ul",[v("li",[t._v("reg(?=exp) 零宽度正先行断言 reg匹配的内容后面内容满足exp规则")]),t._v(" "),v("li",[t._v("reg(?!exp) 零宽度负先行断言 reg匹配的内容后面内容不满足exp规则")]),t._v(" "),v("li",[t._v("(?<=exp)reg 零宽度正后发断言 reg匹配的内容前面内容满足exp规则")]),t._v(" "),v("li",[t._v("(?<!exp)reg 零宽度负后发断言 reg匹配的内容前面内容不满足exp规则")])]),t._v(" "),v("p",[t._v("(?=exp)也叫零宽度正预测先行断言，它断言自身出现的位置的后面能匹配表达式exp。比如\\b\\w+(?=ing\\b)，匹配以ing结尾的单词的前面部分(除了ing以外的部分)，如查找I'm singing while you're dancing.时，它会匹配sing和danc。")]),t._v(" "),v("ol",[v("li",[t._v('"先行"表示待校验的位置在前，即校验的位置在exp匹配的内容之前')]),t._v(" "),v("li",[t._v('"正"表示exp描述的规则，匹配校验位置后面的内容')])]),t._v(" "),v("blockquote",[v("p",[t._v("推荐阅读："),v("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1337736",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式之断言"),v("OutboundLink")],1)])]),t._v(" "),v("h2",{attrs:{id:"常见正则表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见正则表达式"}},[t._v("#")]),t._v(" 常见正则表达式")]),t._v(" "),v("h3",{attrs:{id:"一、校验数字的表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、校验数字的表达式"}},[t._v("#")]),t._v(" 一、校验数字的表达式")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("数字：^[0-9]*$")])]),t._v(" "),v("li",[v("p",[t._v("n位的数字：^\\d{n}$")])]),t._v(" "),v("li",[v("p",[t._v("至少n位的数字：^\\d{n,}$")])]),t._v(" "),v("li",[v("p",[t._v("m-n位的数字：^\\d{m,n}$")])]),t._v(" "),v("li",[v("p",[t._v("零和非零开头的数字：^(0|[1-9][0-9]*)$")])]),t._v(" "),v("li",[v("p",[t._v("非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$")])]),t._v(" "),v("li",[v("p",[t._v("带1-2位小数的正数或负数：^(-)?\\d+(.\\d{1,2})?$")])]),t._v(" "),v("li",[v("p",[t._v("正数、负数、和小数：^(-|+)?\\d+(.\\d+)?$")])]),t._v(" "),v("li",[v("p",[t._v("有两位小数的正实数：^[0-9]+(.[0-9]{2})?$")])]),t._v(" "),v("li",[v("p",[t._v("有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$")])]),t._v(" "),v("li",[v("p",[t._v("非零的正整数：^[1-9]\\d*$ 或 ^([1-9][0-9]"),v("em",[t._v("){1,3}$ 或 ^+?[1-9][0-9]")]),t._v("$")])]),t._v(" "),v("li",[v("p",[t._v('非零的负整数：^-[1-9][]0-9"'),v("em",[t._v("$ 或 ^-[1-9]\\d")]),t._v("$")])]),t._v(" "),v("li",[v("p",[t._v("非负整数：^\\d+$ 或 ^[1-9]\\d*|0$")])]),t._v(" "),v("li",[v("p",[t._v("非正整数：^-[1-9]\\d*|0$ 或 ^((-\\d+)|(0+))$")])]),t._v(" "),v("li",[v("p",[t._v("非负浮点数：^\\d+(.\\d+)?$ 或 ^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*|0?.0+|0$")])]),t._v(" "),v("li",[v("p",[t._v("非正浮点数：^((-\\d+(.\\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*))|0?.0+|0$")])]),t._v(" "),v("li",[v("p",[t._v("正浮点数：^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*$ 或 ^(([0-9]+.[0-9]"),v("em",[t._v("[1-9][0-9]")]),t._v(")|([0-9]"),v("em",[t._v("[1-9][0-9]")]),t._v(".[0-9]+)|([0-9]"),v("em",[t._v("[1-9][0-9]")]),t._v("))$")])]),t._v(" "),v("li",[v("p",[t._v("负浮点数：^-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*)$ 或 ^(-(([0-9]+.[0-9]"),v("em",[t._v("[1-9][0-9]")]),t._v(")|([0-9]"),v("em",[t._v("[1-9][0-9]")]),t._v(".[0-9]+)|([0-9]"),v("em",[t._v("[1-9][0-9]")]),t._v(")))$")])]),t._v(" "),v("li",[v("p",[t._v("浮点数：^(-?\\d+)(.\\d+)?$ 或 ^-?([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*|0?.0+|0)$")])])]),t._v(" "),v("h3",{attrs:{id:"二、校验字符的表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、校验字符的表达式"}},[t._v("#")]),t._v(" 二、校验字符的表达式")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("汉字：^[\\u4e00-\\u9fa5]{0,}$")])]),t._v(" "),v("li",[v("p",[t._v("英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$")])]),t._v(" "),v("li",[v("p",[t._v("长度为3-20的所有字符：^.{3,20}$")])]),t._v(" "),v("li",[v("p",[t._v("由26个英文字母组成的字符串：^[A-Za-z]+$")])]),t._v(" "),v("li",[v("p",[t._v("由26个大写英文字母组成的字符串：^[A-Z]+$")])]),t._v(" "),v("li",[v("p",[t._v("由26个小写英文字母组成的字符串：^[a-z]+$")])]),t._v(" "),v("li",[v("p",[t._v("由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$")])]),t._v(" "),v("li",[v("p",[t._v("由数字、26个英文字母或者下划线组成的字符串：^\\w+$ 或 ^\\w{3,20}$")])]),t._v(" "),v("li",[v("p",[t._v("中文、英文、数字包括下划线：^[\\u4E00-\\u9FA5A-Za-z0-9_]+$")])]),t._v(" "),v("li",[v("p",[t._v("中文、英文、数字但不包括下划线等符号：^[\\u4E00-\\u9FA5A-Za-z0-9]+$ 或 ^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$")])]),t._v(" "),v("li",[v("p",[t._v("可以输入含有^%&',;=?$\"等字符：[^%&',;=?$\\x22]+ 12 禁止输入含有~的字符：[^~\\x22]+")])])]),t._v(" "),v("h3",{attrs:{id:"三、特殊需求表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、特殊需求表达式"}},[t._v("#")]),t._v(" 三、特殊需求表达式")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("Email地址：^\\w+([-+.]\\w+)"),v("em",[t._v("@\\w+([-.]\\w+)")]),t._v(".\\w+([-.]\\w+)*$")])]),t._v(" "),v("li",[v("p",[t._v("域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?")])]),t._v(" "),v("li",[v("p",[t._v("InternetURL：[a-zA-z]+://[^\\s]* 或 ^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%&=]*)?$")])]),t._v(" "),v("li",[v("p",[t._v("手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$")])]),t._v(" "),v("li",[v("p",[t._v('电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^((\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$')])]),t._v(" "),v("li",[v("p",[t._v("国内电话号码(0511-4405222、021-87888822)：\\d{3}-\\d{8}|\\d{4}-\\d{7}")])]),t._v(" "),v("li",[v("p",[t._v("身份证号(15位、18位数字)：^\\d{15}|\\d{18}$")])]),t._v(" "),v("li",[v("p",[t._v("短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$")])]),t._v(" "),v("li",[v("p",[t._v("帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$")])]),t._v(" "),v("li",[v("p",[t._v("密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\\w{5,17}$")])]),t._v(" "),v("li",[v("p",[t._v("强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=."),v("em",[t._v("\\d)(?=.")]),t._v("[a-z])(?=.*[A-Z]).{8,10}$")])]),t._v(" "),v("li",[v("p",[t._v("日期格式：^\\d{4}-\\d{1,2}-\\d{1,2}")])]),t._v(" "),v("li",[v("p",[t._v("一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$")])]),t._v(" "),v("li",[v("p",[t._v("一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$")])]),t._v(" "),v("li",[v("p",[t._v("钱的输入格式：")])]),t._v(" "),v("li",[v("p",[t._v('1.有四种钱的表示形式我们可以接受:"10000.00" 和 "10,000.00", 和没有 "分" 的 "10000" 和 "10,000"：^[1-9][0-9]*$')])]),t._v(" "),v("li",[v("p",[t._v('2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符"0"不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$')])]),t._v(" "),v("li",[v("p",[t._v("3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$")])]),t._v(" "),v("li",[v("p",[t._v("4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$")])]),t._v(" "),v("li",[v("p",[t._v('5.必须说明的是,小数点后面至少应该有1位数,所以"10."是不通过的,但是 "10" 和 "10.2" 是通过的：^[0-9]+(.[0-9]{2})?$')])]),t._v(" "),v("li",[v("p",[t._v("6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$")])]),t._v(" "),v("li",[v("p",[t._v("7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$")])])]),t._v(" "),v("p",[t._v("23 8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$")]),t._v(" "),v("ol",{attrs:{start:"24"}},[v("li",[v("p",[t._v('备注：这就是最终结果了,别忘了"+"可以用"*"替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里')])]),t._v(" "),v("li",[v("p",[t._v("xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$")])]),t._v(" "),v("li",[v("p",[t._v("中文字符的正则表达式：[\\u4e00-\\u9fa5]")])]),t._v(" "),v("li",[v("p",[t._v("双字节字符：[^\\x00-\\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))")])]),t._v(" "),v("li",[v("p",[t._v("空白行的正则表达式：\\n\\s*\\r (可以用来删除空白行)")])]),t._v(" "),v("li",[v("p",[t._v("HTML标记的正则表达式：<(\\S*?)[^>]"),v("em",[t._v(">.")]),t._v("?</\\1>|<.*? /> (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)")])]),t._v(" "),v("li",[v("p",[t._v("首尾空白字符的正则表达式：^\\s*|\\s*$或(^\\s*)|(\\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)")])]),t._v(" "),v("li",[v("p",[t._v("腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始)")])]),t._v(" "),v("li",[v("p",[t._v("中国邮政编码：[1-9]\\d{5}(?!\\d) (中国邮政编码为6位数字)")])]),t._v(" "),v("li",[v("p",[t._v("IP地址：\\d+.\\d+.\\d+.\\d+ (提取IP地址时有用)")])]),t._v(" "),v("li",[v("p",[t._v("IP地址：((?: (?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))")])])]),t._v(" "),v("h2",{attrs:{id:"正则表达式中问号的作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式中问号的作用"}},[t._v("#")]),t._v(" 正则表达式中问号的作用")]),t._v(" "),v("p",[t._v("问号有3中作用，不同场景下作用不同")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("作为数量量词，表示0个或者多个。")])]),t._v(" "),v("li",[v("p",[t._v("用来修饰量词，表示惰性匹配。")])]),t._v(" "),v("li",[v("p",[t._v("(?=p)和(?!p)用来匹配位置。")])])]),t._v(" "),v("h2",{attrs:{id:"如何将浮点数点左边的数每三位添加一个逗号-如1300000-22转化为『1-300-000-22』"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何将浮点数点左边的数每三位添加一个逗号-如1300000-22转化为『1-300-000-22』"}},[t._v("#")]),t._v(" 如何将浮点数点左边的数每三位添加一个逗号，如1300000.22转化为『1,300,000.22』?")]),t._v(" "),v("div",{staticClass:"language-JS extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("commafy")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" num\n        "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token regex"}},[v("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),v("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\d)(?=(\\d{3})+\\.)")]),v("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),v("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$1"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $2")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $2 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    console"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("commafy")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1300000.22")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1,300,000.22")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);