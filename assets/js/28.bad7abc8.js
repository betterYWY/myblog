(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{615:function(t,a,s){"use strict";s.r(a);var n=s(5),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"css3-有哪些新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css3-有哪些新特性"}},[t._v("#")]),t._v(" CSS3 有哪些新特性？")]),t._v(" "),s("ul",[s("li",[t._v("新增各种CSS选择器\t（:not(.input)：所有class不是“input”的节点）")]),t._v(" "),s("li",[t._v("圆角\t\t（border-radius:8px）")]),t._v(" "),s("li",[t._v("多列布局\t（multi-column layout）")]),t._v(" "),s("li",[t._v("阴影和反射\t（Shadow\\Reflect）")]),t._v(" "),s("li",[t._v("文字特效\t\t（text-shadow）")]),t._v(" "),s("li",[t._v("文字渲染\t\t（Text-decoration）")]),t._v(" "),s("li",[t._v("线性渐变\t\t（gradient）")]),t._v(" "),s("li",[t._v("旋转\t\t\t（transform）")]),t._v(" "),s("li",[t._v("缩放，定位，倾斜，动画，多背景"),s("br"),t._v("\n例如：transform:\\scale(0.85,0.90)\\translate(0px,-30px)\\skew(-9deg,0deg)\\Animation:")])]),t._v(" "),s("h2",{attrs:{id:"css-多列等高如何实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-多列等高如何实现"}},[t._v("#")]),t._v(" CSS 多列等高如何实现？")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/htmlcss2.jpg",alt:""}}),s("br"),t._v("\n（1）利用padding-bottom|margin-bottom正负值相抵，不会影响页面布局的特点。设置父容器设置超出隐藏（overflow:\nhidden），这样父容器的高度就还是它里面的列没有设定padding-bottom时的高度，当它里面的任一列高度增加了，则\n父容器的高度被撑到里面最高那列的高度，其他比这列矮的列会用它们的padding-bottom补偿这部分高度差。")]),t._v(" "),s("p",[t._v("（2）利用table-cell所有单元格高度都相等的特性，来实现多列等高。")]),t._v(" "),s("p",[t._v("（3）利用flex布局中项目align-items属性默认为stretch，如果项目未设置高度或设为auto，将占满整个容器的高度\n的特性，来实现多列等高。")]),t._v(" "),s("h2",{attrs:{id:"经常遇到的浏览器的兼容性有哪些-原因-解决方法是什么-常用-hack-的技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#经常遇到的浏览器的兼容性有哪些-原因-解决方法是什么-常用-hack-的技巧"}},[t._v("#")]),t._v(" 经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用 hack 的技巧？")]),t._v(" "),s("p",[t._v("（1）png24位的图片在iE6浏览器上出现背景"),s("br"),t._v("\n解决方案：做成PNG8，也可以引用一段脚本处理。")]),t._v(" "),s("p",[t._v("（2）浏览器默认的margin和padding不同"),s("br"),t._v("\n解决方案：加一个全局的*{margin:0;padding:0;}来统一。")]),t._v(" "),s("p",[t._v("（3）IE6双边距bug：在IE6下，如果对元素设置了浮动，同时又设置了margin-left或"),s("br"),t._v("\nmargin-right，margin值会加倍。")]),t._v(" "),s("p",[t._v("#box{float:left;width:10px;margin:0 0 0 10px;}")]),t._v(" "),s("p",[t._v("这种情况之下IE会产生20px的距离"),s("br"),t._v("\n解决方案：在float的标签样式控制中加入_display:inline;将其转化为行内属性。(_这个符号只有ie6会识别)")]),t._v(" "),s("p",[t._v("（4）渐进识别的方式，从总体中逐渐排除局部。"),s("br"),t._v('\n首先，巧妙的使用"\\9"这一标记，将IE游览器从所有情况中分离出来。'),s("br"),t._v('\n接着，再次使用"+"将IE8和IE7、IE6分离开来，这样IE8已经独立识别。')]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".bb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#f1ee18"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*所有识别*/")]),t._v("  \n."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#00deff\\9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IE6、7、8识别*/")]),t._v("  \n+"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#a200ff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IE6、7识别*/")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("_background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#1e0bd1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IE6识别*/")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("（5）IE下，可以使用获取常规属性的方法来获取自定义属性，也可以使用getAttribute()获取自定义"),s("br"),t._v("\n属性；Firefox下，只能使用getAttribute()获取自定义属性"),s("br"),t._v("\n解决方法：统一通过getAttribute()获取自定义属性。")]),t._v(" "),s("p",[t._v("（6）IE下，event对象有x、y属性，但是没有pageX、pageY属性;Firefox下，event对象有\npageX、pageY属性，但是没有x、y属性。"),s("br"),t._v("\n解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。")]),t._v(" "),s("p",[t._v("（7）Chrome中文界面下默认会将小于12px的文本强制按照12px显示"),s("br"),t._v("\n解决方法：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("可通过加入CSS属性-webkit-text-size-adjust:none;解决。但是，在chrome\n更新到27版本之后就不可以用了。")])]),t._v(" "),s("li",[s("p",[t._v("还可以使用-webkit-transform:scale(0.5);注意-webkit-transform:scale(0.75);\n收缩的是整个span的大小，这时候，必须要将span转换成块元素，可以使用display：block/inline-block/...；")])])]),t._v(" "),s("p",[t._v("（8）超链接访问过后hover样式就不出现了，被点击访问过的超链接样式不再具有hover和active了\n解决方法：改变CSS属性的排列顺序L-V-H-A")]),t._v(" "),s("p",[t._v("（9）怪异模式问题：漏写DTD声明，Firefox仍然会按照标准模式来解析网页，但在IE中会触发怪异模\n式。为避免怪异模式给我们带来不必要的麻烦，最好养成书写DTD声明的好习惯。")]),t._v(" "),s("h2",{attrs:{id:"li-与-li-之间有看不见的空白间隔是什么原因引起的-有什么解决办法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#li-与-li-之间有看不见的空白间隔是什么原因引起的-有什么解决办法"}},[t._v("#")]),t._v(" li 与 li 之间有看不见的空白间隔是什么原因引起的？有什么解决办法？")]),t._v(" "),s("p",[t._v("浏览器会把inline元素间的空白字符（空格、换行、Tab等）渲染成一个空格。而为了美观。我们通常是一个"),s("code",[t._v("<li>")]),t._v("放在一行，\n这导致"),s("code",[t._v("<li>")]),t._v("换行后产生换行字符，它变成一个空格，占用了一个字符的宽度。")]),t._v(" "),s("p",[s("strong",[t._v("解决办法：")]),s("br"),t._v("\n（1）为"),s("code",[t._v("<li>")]),t._v("设置float:left。不足：有些容器是不能设置浮动，如左右切换的焦点图等。")]),t._v(" "),s("p",[t._v("（2）将所有"),s("code",[t._v("<li>")]),t._v("写在同一行。不足：代码不美观。")]),t._v(" "),s("p",[t._v("（3）将"),s("code",[t._v("<ul>")]),t._v("内的字符尺寸直接设为0，即"),s("code",[t._v("font-size:0;")]),t._v("。不足："),s("code",[t._v("<ul>")]),t._v("中的其他字符尺寸也被设为0，需要额外重新设定其他\n字符尺寸，且在Safari浏览器依然会出现空白间隔。")]),t._v(" "),s("p",[t._v("（4）消除"),s("code",[t._v("<ul>")]),t._v("的字符间隔"),s("code",[t._v("letter-spacing:-8px;")]),t._v("，不足：这也设置了"),s("code",[t._v("<li>")]),t._v("内的字符间隔，因此需要"),s("strong",[t._v("将"),s("code",[t._v("<li>")]),t._v("内的")]),t._v("字符\n间隔设为默认"),s("code",[t._v("letter-spacing:normal;")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"为什么要初始化-css-样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要初始化-css-样式"}},[t._v("#")]),t._v(" 为什么要初始化 CSS 样式？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。")])]),t._v(" "),s("li",[s("p",[t._v("当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。")])])]),t._v(" "),s("p",[t._v("最简单的初始化方法："),s("code",[t._v("*{padding:0;margin:0;}")]),t._v("（强烈不建议）")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("淘宝的样式初始化代码：\nbody,h1,h2,h3,h4,h5,h6,hr,p,blockquote,dl,dt,dd,ul,ol,li,pre,form,fieldset,legend\n,button,input,textarea,th,td")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body,button,input,select,textarea")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("12px/1.5tahoma"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\\5b8b\\4f53"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("h1,h2,h3,h4,h5,h6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("address,cite,dfn,em,var")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("normal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("code,kbd,pre,samp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("couriernew"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("courier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("monospace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("small")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("12px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("ul,ol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("list-style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-decoration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a:hover")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-decoration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("underline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("sup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("text-top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("sub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("text-bottom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("legend")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("fieldset,img")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("button,input,select,textarea")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-collapse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("collapse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-spacing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"css-里的-visibility-属性有个-collapse-属性值是干嘛用的-在不同浏览器下以后什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-里的-visibility-属性有个-collapse-属性值是干嘛用的-在不同浏览器下以后什么区别"}},[t._v("#")]),t._v(" CSS 里的 visibility 属性有个 collapse 属性值是干嘛用的？在不同浏览器下以后什么区别？")]),t._v(" "),s("p",[t._v("（1）对于一般的元素，它的表现跟visibility：hidden;是一样的。元素是不可见的，但此时仍占用页面空间。")]),t._v(" "),s("p",[t._v("（2）但例外的是，如果这个元素是table相关的元素，例如table行，table group，table列，table column group，它的\n表现却跟display:none一样，也就是说，它们占用的空间也会释放。")]),t._v(" "),s("p",[t._v("在不同浏览器下的区别：")]),t._v(" "),s("p",[t._v("在谷歌浏览器里，使用collapse值和使用hidden值没有什么区别。")]),t._v(" "),s("p",[t._v("在火狐浏览器、Opera和IE11里，使用collapse值的效果就如它的字面意思：table的行会消失，它的下面一行会补充它的位\n置。")]),t._v(" "),s("h2",{attrs:{id:"width-auto-和-width-100-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#width-auto-和-width-100-的区别"}},[t._v("#")]),t._v(" width:auto 和 width:100%的区别")]),t._v(" "),s("p",[t._v("元素在不设置padidng和margin的情况下，width:100%和width:auto表现一样，都是继承自父级的宽度。元素的默认宽度是 width:auto,但是，设置了padding和margin后，表现则大不相同")]),t._v(" "),s("ol",[s("li",[t._v("width：100%"),s("br"),t._v("\n100%表示子元素的宽度和父元素的宽度相等，其中并不包括子元素内外边距以及边框的值，为子元素真正的宽度")]),t._v(" "),s("li",[t._v("width：auto"),s("br"),t._v("\nauto表示子元素的 宽度+内边距+外边距+边框 才等于父元素的宽度")])]),t._v(" "),s("p",[t._v("注意：上述父元素的宽度都是父元素真正的宽度，即父元素width属性值")]),t._v(" "),s("h2",{attrs:{id:"display-、-position-和-float-的相互关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-、-position-和-float-的相互关系"}},[t._v("#")]),t._v(" 'display'、'position'和'float'的相互关系？")]),t._v(" "),s("p",[t._v("（1）首先我们判断display属性是否为none，如果为none，则position和float属性的值不影响元素最后的表现。")]),t._v(" "),s("p",[t._v("（2）然后判断position的值是否为absolute或者fixed，如果是，则float属性失效，并且display的值应该被\n设置为table或者block，具体转换需要看初始转换值。")]),t._v(" "),s("p",[t._v("（3）如果position的值不为absolute或者fixed，则判断float属性的值是否为none，如果不是，则display\n的值则按上面的规则转换。注意，如果position的值为relative并且float属性的值存在，则relative相对\n于浮动后的最终位置定位。")]),t._v(" "),s("p",[t._v("（4）如果float的值为none，则判断元素是否为根元素，如果是根元素则display属性按照上面的规则转换，如果不是，\n则保持指定的display属性值不变。")]),t._v(" "),s("p",[t._v("总的来说，可以把它看作是一个类似优先级的机制，\"position:absolute\"和\"position:fixed\"优先级最高，有它存在\n的时候，浮动不起作用，'display'的值也需要调整；其次，元素的'float'特性的值不是\"none\"的时候或者它是根元素\n的时候，调整'display'的值；最后，非根元素，并且非浮动元素，并且非绝对定位的元素，'display'特性值同设置值。")]),t._v(" "),s("h2",{attrs:{id:"请解释一下为什么需要清除浮动-清除浮动的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请解释一下为什么需要清除浮动-清除浮动的方式"}},[t._v("#")]),t._v(" 请解释一下为什么需要清除浮动？清除浮动的方式")]),t._v(" "),s("p",[t._v("浮动元素可以左右移动，直到遇到另一个浮动元素或者遇到它外边缘的包含框。浮动框不属于文档流中的普通流，当元素浮动之后，\n不会影响块级元素的布局，只会影响内联元素布局。此时文档流中的普通流就会表现得该浮动框不存在一样的布局模式。当包含框\n的高度小于浮动框的时候，此时就会出现“高度塌陷”。")]),t._v(" "),s("p",[t._v("清除浮动是为了清除使用浮动元素产生的影响。浮动的元素，高度会塌陷，而高度的塌陷使我们页面后面的布局不能正常显示。")]),t._v(" "),s("p",[t._v("清除浮动的方式")]),t._v(" "),s("p",[t._v("（1）使用clear属性清除浮动。")]),t._v(" "),s("p",[t._v("（2）使用BFC块级格式化上下文来清除浮动。")]),t._v(" "),s("p",[t._v("因为BFC元素不会影响外部元素的特点，所以BFC元素也可以用来清除浮动的影响，因为如果不清除，子元素浮动则父元\n素高度塌陷，必然会影响后面元素布局和定位，这显然有违BFC元素的子元素不会影响外部元素的设定。")]),t._v(" "),s("h2",{attrs:{id:"使用-clear-属性清除浮动的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-clear-属性清除浮动的原理"}},[t._v("#")]),t._v(" 使用 clear 属性清除浮动的原理？")]),t._v(" "),s("p",[t._v("使用clear属性清除浮动，其语法如下：")]),t._v(" "),s("p",[t._v("clear:none|left|right|both")]),t._v(" "),s("p",[t._v("如果单看字面意思，clear:left应该是“清除左浮动”，clear:right应该是“清除右浮动”的意思，实际上，这种解释是有问\n题的，因为浮动一直还在，并没有清除。")]),t._v(" "),s("p",[t._v("官方对clear属性的解释是：“元素盒子的边不能和前面的浮动元素相邻。”，我们对元素设置clear属性是为了避免浮动元素\n对该元素的影响，而不是清除掉浮动。")]),t._v(" "),s("p",[t._v("还需要注意的一点是clear属性指的是元素盒子的边不能和前面的浮动元素相邻，注意这里“前面的”3个字，也就是clear属\n性对“后面的”浮动元素是不闻不问的。考虑到float属性要么是left，要么是right，不可能同时存在，同时由于clear\n属性对“后面的”浮动元素不闻不问，因此，当clear:left有效的时候，clear:right必定无效，也就是此时clear:left\n等同于设置clear:both；同样地，clear:right如果有效也是等同于设置clear:both。由此可见，clear:left和cle\nar:right这两个声明就没有任何使用的价值，至少在CSS世界中是如此，直接使用clear:both吧。")]),t._v(" "),s("h2",{attrs:{id:"css-优化、提高性能的方法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-优化、提高性能的方法有哪些"}},[t._v("#")]),t._v(" CSS 优化、提高性能的方法有哪些？")]),t._v(" "),s("p",[s("strong",[t._v("加载性能：")])]),t._v(" "),s("p",[t._v("（1）css压缩：将写好的css进行打包压缩，可以减少很多的体积。"),s("br"),t._v("\n（2）css单一样式：当需要下边距和左边距的时候，很多时候选择:margin:top 0 bottom 0;但margin-bottom:bot\ntom;margin-left:left;执行的效率更高。"),s("br"),t._v("\n（3）减少使用@import,而建议使用link，因为后者在页面加载时一起加载，前者是等待页面加载完成之后再进行加载。")]),t._v(" "),s("p",[s("strong",[t._v("选择器性能：")])]),t._v(" "),s("p",[t._v("（1）关键选择器（key selector）。选择器的最后面的部分为关键选择器（即用来匹配目标元素的部分）。CSS选择符是从右到\n左进行匹配的。当使用后代选择器的时候，浏览器会遍历所有子元素来确定是否是指定的元素等等；")]),t._v(" "),s("p",[t._v("（2）如果规则拥有ID选择器作为其关键选择器，则不要为规则增加标签。过滤掉无关的规则（这样样式系统就不会浪费时间去匹\n配它们了）。")]),t._v(" "),s("p",[t._v("（3）避免使用通配规则，如*{}计算次数惊人！只对需要用到的元素进行选择。")]),t._v(" "),s("p",[t._v("（4）尽量少的去对标签进行选择，而是用class。")]),t._v(" "),s("p",[t._v("（5）尽量少的去使用后代选择器，降低选择器的权重值。后代选择器的开销是最高的，尽量将选择器的深度降到最低，最高不要超过\n三层，更多的使用类来关联每一个标签元素。")]),t._v(" "),s("p",[t._v("（6）了解哪些属性是可以通过继承而来的，然后避免对这些属性重复指定规则。")]),t._v(" "),s("p",[s("strong",[t._v("渲染性能：")])]),t._v(" "),s("p",[t._v("（1）慎重使用高性能属性：浮动、定位。")]),t._v(" "),s("p",[t._v("（2）尽量减少页面重排、重绘。")]),t._v(" "),s("p",[t._v("（3）去除空规则：｛｝。空规则的产生原因一般来说是为了预留样式。去除这些空规则无疑能减少css文档体积。")]),t._v(" "),s("p",[t._v("（4）属性值为0时，不加单位。")]),t._v(" "),s("p",[t._v("（5）属性值为浮动小数0.**，可以省略小数点之前的0。")]),t._v(" "),s("p",[t._v("（6）标准化各种浏览器前缀：带浏览器前缀的在前。标准属性在后。")]),t._v(" "),s("p",[t._v("（7）不使用@import前缀，它会影响css的加载速度。")]),t._v(" "),s("p",[t._v("（8）选择器优化嵌套，尽量避免层级过深。")]),t._v(" "),s("p",[t._v("（9）css雪碧图，同一页面相近部分的小图标，方便使用，减少页面的请求次数，但是同时图片本身会变大，使用时，优劣考虑清\n楚，再使用。")]),t._v(" "),s("p",[t._v("（10）正确使用display的属性，由于display的作用，某些样式组合会无效，徒增样式体积的同时也影响解析性能。")]),t._v(" "),s("p",[t._v("（11）不滥用web字体。对于中文网站来说WebFonts可能很陌生，国外却很流行。web fonts通常体积庞大，而且一些浏\n览器在下载web fonts时会阻塞页面渲染损伤性能。")]),t._v(" "),s("p",[s("strong",[t._v("可维护性、健壮性：")])]),t._v(" "),s("p",[t._v("（1）将具有相同属性的样式抽离出来，整合并通过class在页面中进行使用，提高css的可维护性。\n（2）样式与内容分离：将css代码定义到外部css中。")]),t._v(" "),s("h2",{attrs:{id:"浏览器是怎样解析-css-选择器的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是怎样解析-css-选择器的"}},[t._v("#")]),t._v(" 浏览器是怎样解析 CSS 选择器的？")]),t._v(" "),s("p",[t._v("样式系统从关键选择器开始匹配，然后左移查找规则选择器的祖先元素。只要选择器的子树一直在工作，样式系统就会持续左移，直\n到和规则匹配，或者是因为不匹配而放弃该规则。")]),t._v(" "),s("p",[t._v("试想一下，如果采用从左至右的方式读取CSS规则，那么大多数规则读到最后（最右）才会发现是不匹配的，这样做会费时耗能，\n最后有很多都是无用的；而如果采取从右向左的方式，那么只要发现最右边选择器不匹配，就可以直接舍弃了，避免了许多无效匹配。")]),t._v(" "),s("h2",{attrs:{id:"在网页中应该使用奇数还是偶数的字体-为什么呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在网页中应该使用奇数还是偶数的字体-为什么呢"}},[t._v("#")]),t._v(" 在网页中应该使用奇数还是偶数的字体？为什么呢？")]),t._v(" "),s("p",[t._v("（1）偶数字号相对更容易和web设计的其他部分构成比例关系。比如：当我用了14px的正文字号，我可能会在一些地方用14\n×0.5=7px的margin，在另一些地方用14×1.5=21px的标题字号。"),s("br"),t._v("\n（2）浏览器缘故，低版本的浏览器ie6会把奇数字体强制转化为偶数，即13px渲染为14px。"),s("br"),t._v("\n（3）系统差别，早期的Windows里，中易宋体点阵只有12和14、15、16px，唯独缺少13px。")]),t._v(" "),s("h2",{attrs:{id:"margin-和-padding-分别适合什么场景使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin-和-padding-分别适合什么场景使用"}},[t._v("#")]),t._v(" margin 和 padding 分别适合什么场景使用？")]),t._v(" "),s("p",[t._v("margin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。"),s("br"),t._v("\nmargin用于布局分开元素使元素与元素互不相干。"),s("br"),t._v("\npadding用于元素与内容之间的间隔，让内容（文字）与（包裹）元素之间有一段距离。")]),t._v(" "),s("p",[t._v("何时应当使用margin："),s("br"),t._v("\n•需要在border外侧添加空白时。"),s("br"),t._v("\n•空白处不需要背景（色）时。"),s("br"),t._v("\n•上下相连的两个盒子之间的空白，需要相互抵消时。如15px+20px的margin，将得到20px的空白。")]),t._v(" "),s("p",[t._v("何时应当时用padding："),s("br"),t._v("\n•需要在border内测添加空白时。"),s("br"),t._v("\n•空白处需要背景（色）时。"),s("br"),t._v("\n•上下相连的两个盒子之间的空白，希望等于两者之和时。如15px+20px的padding，将得到35px的空白。")]),t._v(" "),s("h2",{attrs:{id:"浏览器如何判断是否支持-webp-格式图片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何判断是否支持-webp-格式图片"}},[t._v("#")]),t._v(" 浏览器如何判断是否支持 webp 格式图片")]),t._v(" "),s("p",[t._v("（1）宽高判断法。通过创建image对象，将其src属性设置为webp格式的图片，然后在onload事件中获取图片的宽高，如\n果能够获取，则说明浏览器支持webp格式图片。如果不能获取或者触发了onerror函数，那么就说明浏览器不支持webp格\n式的图片。")]),t._v(" "),s("p",[t._v("（2）canvas判断方法。我们可以动态的创建一个canvas对象，通过canvas的toDataURL将设置为webp格式，然后判断\n返回值中是否含有image/webp字段，如果包含则说明支持WebP，反之则不支持。")]),t._v(" "),s("h2",{attrs:{id:"使用-rem-布局的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-rem-布局的优缺点"}},[t._v("#")]),t._v(" 使用 rem 布局的优缺点？")]),t._v(" "),s("p",[s("strong",[t._v("优点：")]),s("br"),t._v("\n在屏幕分辨率千差万别的时代，只要将rem与屏幕分辨率关联起来就可以实现页面的整体缩放，使得在设备上的展现都统一起来了。\n而且现在浏览器基本都已经支持rem了，兼容性也非常的好。")]),t._v(" "),s("p",[s("strong",[t._v("缺点：")]),s("br"),t._v("\n（1）在奇葩的dpr设备上表现效果不太好，比如一些华为的高端机型用rem布局会出现错乱。"),s("br"),t._v("\n（2）使用iframe引用也会出现问题。"),s("br"),t._v("\n（3）rem在多屏幕尺寸适配上与当前两大平台的设计哲学不一致。即大屏的出现到底是为了看得又大又清楚，还是为了看的更多的问题。")]),t._v(" "),s("h2",{attrs:{id:"为什么-height-100-会无效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-height-100-会无效"}},[t._v("#")]),t._v(" 为什么 height:100%会无效？")]),t._v(" "),s("p",[t._v("对于普通文档流中的元素，百分比高度值要想起作用，其父级必须有一个可以生效的高度值。")]),t._v(" "),s("p",[t._v("原因是如果包含块的高度没有显式指定（即高度由内容决定），并且该元素不是绝对定位，则计算值为auto，因为解释成了auto，\n所以无法参与计算。")]),t._v(" "),s("p",[t._v("使用绝对定位的元素会有计算值，即使祖先元素的height计算为auto也是如此。")]),t._v(" "),s("h2",{attrs:{id:"什么是幽灵空白节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是幽灵空白节点"}},[t._v("#")]),t._v(" 什么是幽灵空白节点？")]),t._v(" "),s("p",[t._v("“幽灵空白节点”是内联盒模型中非常重要的一个概念，具体指的是：在HTML5文档声明中，内联元素的所有解析和渲染表现就如同\n每个行框盒子的前面有一个“空白节点”一样。这个“空白节点”永远透明，不占据任何宽度，看不见也无法通过脚本获取，就好像幽灵\n一样，但又确确实实地存在，表现如同文本节点一样，因此，我称之为“幽灵空白节点”。"),s("br"),t._v(" "),s("strong",[t._v("解决方法")])]),t._v(" "),s("ol",[s("li",[t._v("img设置display为block；")]),t._v(" "),s("li",[t._v("父容器（如示例中的div）font-size设置为0；")])]),t._v(" "),s("h2",{attrs:{id:"什么是替换元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是替换元素"}},[t._v("#")]),t._v(" 什么是替换元素？")]),t._v(" "),s("p",[t._v("通过修改某个属性值呈现的内容就可以被替换的元素就称为“替换元素”。因此，"),s("code",[t._v("<img>、<object>、<video>、<iframe>")]),t._v("或者表\n单元素"),s("code",[t._v("<textarea>")]),t._v("和"),s("code",[t._v("<input>")]),t._v("和"),s("code",[t._v("<select>")]),t._v("都是典型的替换元素。")]),t._v(" "),s("p",[t._v("替换元素除了内容可替换这一特性以外，还有以下一些特性。")]),t._v(" "),s("p",[t._v("（1）内容的外观不受页面上的CSS的影响。用专业的话讲就是在样式表现在CSS作用域之外。如何更改替换元素本身的外观需要\n类似appearance属性，或者浏览器自身暴露的一些样式接口，")]),t._v(" "),s("p",[t._v("（2）有自己的尺寸。在Web中，很多替换元素在没有明确尺寸设定的情况下，其默认的尺寸（不包括边框）是300像素×150像\n素，如"),s("code",[t._v("<video>、<iframe>")]),t._v("或者"),s("code",[t._v("<canvas>")]),t._v("等，也有少部分替换元素为0像素，如"),s("code",[t._v("<img>")]),t._v("图片，而表单元素的替换元素\n的尺寸则和浏览器有关，没有明显的规律。")]),t._v(" "),s("p",[t._v("（3）在很多CSS属性上有自己的一套表现规则。比较具有代表性的就是vertical-align属性，对于替换元素和非替换元素，ve\nrtical-align属性值的解释是不一样的。比方说vertical-align的默认值的baseline，很简单的属性值，基线之意，\n被定义为字符x的下边缘，而替换元素的基线却被硬生生定义成了元素的下边缘。")]),t._v(" "),s("p",[t._v("（4）所有的替换元素都是内联水平元素，也就是替换元素和替换元素、替换元素和文字都是可以在一行显示的。但是，替换元素默认\n的display值却是不一样的，有的是inline，有的是inline-block。")]),t._v(" "),s("h2",{attrs:{id:"content-与替换元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#content-与替换元素"}},[t._v("#")]),t._v(" content 与替换元素")]),t._v(" "),s("p",[t._v("所谓“替换元素”指的就是内容可替换，而 content 属性是可以直接替换 HTML 中的内容的，因此，可以让 content 属性生效的场景，我们都可以称为替换元素"),s("br"),t._v("\n如果是在 ::before/::after 伪元素中生效，那么此时这个伪元素被称之为 “匿名替换元素”。")]),t._v(" "),s("p",[t._v("（1）我们使用content生成的文本是无法选中、无法复制的，好像设置了user select:none声明一般，但是普通元素的文本\n却可以被轻松选中。同时，content生成的文本无法被屏幕阅读设备读取，也无法被搜索引擎抓取，因此，千万不要自以为是\n地把重要的文本信息使用content属性生成，因为这对可访问性和SEO都很不友好。")]),t._v(" "),s("p",[t._v("（2）content生成的内容不能左右:empty伪类。")]),t._v(" "),s("p",[t._v("（3）content动态生成值无法获取。")]),t._v(" "),s("h2",{attrs:{id:"margin-auto-的填充规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin-auto-的填充规则"}},[t._v("#")]),t._v(" margin:auto 的填充规则？")]),t._v(" "),s("p",[t._v("margin的'auto'可不是摆设，是具有强烈的计算意味的关键字，用来计算元素对应方向应该获得的剩余间距大小。但是触发mar\ngin:auto计算有一个前提条件，就是width或height为auto时，元素是具有对应方向的自动填充特性的。")]),t._v(" "),s("p",[t._v("（1）如果一侧定值，一侧auto，则auto为剩余空间大小。"),s("br"),t._v("\n（2）如果两侧均是auto，则平分剩余空间。")]),t._v(" "),s("h2",{attrs:{id:"margin-无效的情形"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin-无效的情形"}},[t._v("#")]),t._v(" margin 无效的情形")]),t._v(" "),s("p",[t._v("（1）display计算值inline的非替换元素的垂直margin是无效的。对于内联替换元素，垂直margin有效，并且没有ma\nrgin合并的问题。")]),t._v(" "),s("p",[t._v("（2）表格中的"),s("code",[t._v("<tr>")]),t._v("和"),s("code",[t._v("<td>")]),t._v("元素或者设置display计算值是table-cell或table-row的元素的margin都是无效的。")]),t._v(" "),s("p",[t._v("（3）绝对定位元素非定位方位的margin值“无效”。")]),t._v(" "),s("p",[t._v("（4）定高容器的子元素的margin-bottom或者宽度定死的子元素的margin-right的定位“失效”。")]),t._v(" "),s("h2",{attrs:{id:"line-height-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#line-height-的特殊性"}},[t._v("#")]),t._v(" line-height 的特殊性？")]),t._v(" "),s("p",[t._v("（1）对于非替换元素的纯内联元素，其可视高度完全由line-height决定。对于文本这样的纯内联元素，line-height就是高\n度计算的基石，用专业说法就是指定了用来计算行框盒子高度的基础高度。")]),t._v(" "),s("p",[t._v("（2）内联元素的高度由固定高度和不固定高度组成，这个不固定的部分就是这里的“行距”。换句话说，line-height之所以起作\n用，就是通过改变“行距”来实现的。在CSS中，“行距”分散在当前文字的上方和下方，也就是即使是第一行文字，其上方也是\n有“行距”的，只不过这个“行距”的高度仅仅是完整“行距”高度的一半，因此，也被称为“半行距”。")]),t._v(" "),s("p",[t._v("（3）行距=line-height-font-size。")]),t._v(" "),s("p",[t._v("（4）border以及line-height等传统CSS属性并没有小数像素的概念。如果标注的是文字上边距，则向下取整；如果是文字下\n边距，则向上取整。")]),t._v(" "),s("p",[t._v("（5）对于纯文本元素，line-height直接决定了最终的高度。但是，如果同时有替换元素，则line-height只能决定最小高度。")]),t._v(" "),s("p",[t._v("（6）对于块级元素，line-height对其本身是没有任何作用的，我们平时改变line-height，块级元素的高度跟着变化实际上是\n通过改变块级元素里面内联级别元素占据的高度实现的。")]),t._v(" "),s("p",[t._v("（7）line-height的默认值是normal，还支持数值、百分比值以及长度值。为数值类型时，其最终的计算值是和当前font-si\nze相乘后的值。为百分比值时，其最终的计算值是和当前font-size相乘后的值。为长度值时原意不变。")]),t._v(" "),s("p",[t._v("（8）如果使用数值作为line-height的属性值，那么所有的子元素继承的都是这个值；但是，如果使用百分比值或者长度值作为\n属性值，那么所有的子元素继承的是最终的计算值。")]),t._v(" "),s("p",[t._v("（9）无论内联元素line-height如何设置，最终父级元素的高度都是由数值大的那个line-height决定的。")]),t._v(" "),s("p",[t._v("（10）只要有“内联盒子”在，就一定会有“行框盒子”，就是每一行内联元素外面包裹的一层看不见的盒子。然后，重点来了，在每个\n“行框盒子”前面有一个宽度为0的具有该元素的字体和行高属性的看不见的“幽灵空白节点”。")]),t._v(" "),s("h2",{attrs:{id:"vertical-align-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vertical-align-的特殊性"}},[t._v("#")]),t._v(" vertical-align 的特殊性？")]),t._v(" "),s("p",[t._v("（1）vertical-align的默认值是baseline，即基线对齐，而基线的定义是字母x的下边缘。因此，内联元素默认都是沿着字\n母x的下边缘对齐的。对于图片等替换元素，往往使用元素本身的下边缘作为基线。：一个inline-block元素，如果里面\n没有内联元素，或者overflow不是visible，则该元素的基线就是其margin底边缘；否则其基线就是元素里面最后一行\n内联元素的基线。")]),t._v(" "),s("p",[t._v("（2）vertical-align:top就是垂直上边缘对齐，如果是内联元素，则和这一行位置最高的内联元素的顶部对齐；如果display\n计算值是table-cell的元素，我们不妨脑补成"),s("code",[t._v("<td>")]),t._v("元素，则和"),s("code",[t._v("<tr>")]),t._v("元素上边缘对齐。")]),t._v(" "),s("p",[t._v("（3）vertical-align:middle是中间对齐，对于内联元素，元素的垂直中心点和行框盒子基线往上1/2x-height处对齐。对\n于table-cell元素，单元格填充盒子相对于外面的表格行居中对齐。")]),t._v(" "),s("p",[t._v("（4）vertical-align支持数值属性，根据数值的不同，相对于基线往上或往下偏移，如果是负值，往下偏移，如果是正值，往上\n偏移。")]),t._v(" "),s("p",[t._v("（5）vertical-align属性的百分比值则是相对于line-height的计算值计算的。")]),t._v(" "),s("p",[t._v("（6）vertical-align起作用是有前提条件的，这个前提条件就是：只能应用于内联元素以及display值为table-cell的元\n素。")]),t._v(" "),s("p",[t._v("（7）table-cell元素设置vertical-align垂直对齐的是子元素，但是其作用的并不是子元素，而是table-cell元素自身。")]),t._v(" "),s("h2",{attrs:{id:"overflow-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overflow-的特殊性"}},[t._v("#")]),t._v(" overflow 的特殊性？")]),t._v(" "),s("p",[t._v("（1）一个设置了overflow:hidden声明的元素，假设同时存在border属性和padding属性，则当子元素内容超出容器宽度\n高度限制的时候，剪裁的边界是border box的内边缘，而非padding box的内边缘。")]),t._v(" "),s("p",[t._v("（2）HTML中有两个标签是默认可以产生滚动条的，一个是根元素"),s("code",[t._v("<html>")]),t._v("，另一个是文本域"),s("code",[t._v("<textarea>")]),t._v("。")]),t._v(" "),s("p",[t._v("（3）滚动条会占用容器的可用宽度或高度。")]),t._v(" "),s("p",[t._v("（4）元素设置了overflow:hidden声明，里面内容高度溢出的时候，滚动依然存在，仅仅滚动条不存在！")]),t._v(" "),s("h2",{attrs:{id:"relative-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#relative-的特殊性"}},[t._v("#")]),t._v(" relative 的特殊性？")]),t._v(" "),s("p",[t._v("（1）相对定位元素的left/top/right/bottom的百分比值是相对于包含块计算的，而不是自身。注意，虽然定位位移是相对自身，但是百分比值的计算值不是。")]),t._v(" "),s("p",[t._v("（2）top和bottom这两个垂直方向的百分比值计算跟height的百分比值是一样的，都是相对高度计算的。同时，如果包含块的高度是auto，那么计算值是0，偏移无效，也就是说，如果父元素没有设定高度或者不是“格式化高度”，那么relative类似top:20%的代码等同于top:0。")]),t._v(" "),s("p",[t._v("（3）当相对定位元素同时应用对立方向定位值的时候，也就是top/bottom和left/right同时使用的时候，只有一个方向的定位属性会起作用。而谁起作用则是与文档流的顺序有关的，默认的文档流是自上而下、从左往右，因此top/bottom同时使用的时候，bottom失效；left/right同时使用的时候，right失效。")]),t._v(" "),s("h2",{attrs:{id:"text-indent-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#text-indent-的特殊性"}},[t._v("#")]),t._v(" text-indent 的特殊性？")]),t._v(" "),s("p",[t._v("（1）text-indent仅对第一行内联盒子内容有效。")]),t._v(" "),s("p",[t._v("（2）非替换元素以外的display计算值为inline的内联元素设置text-indent值无效，如果计算值inline-block/inli\nne-table则会生效。")]),t._v(" "),s("p",[t._v("（3）"),s("code",[t._v("<input>")]),t._v("标签按钮text-indent值无效。")]),t._v(" "),s("p",[t._v("（4）"),s("code",[t._v("<button>")]),t._v("标签按钮text-indent值有效。")]),t._v(" "),s("p",[t._v("（5）text-indent的百分比值是相对于当前元素的“包含块”计算的，而不是当前元素。")]),t._v(" "),s("h2",{attrs:{id:"white-space-与换行和空格的控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#white-space-与换行和空格的控制"}},[t._v("#")]),t._v(" white-space 与换行和空格的控制？")]),t._v(" "),s("p",[t._v("white-space属性声明了如何处理元素内的空白字符，这类空白字符包括Space（空格）键、Enter（回车）键、Tab（制表符）\n键产生的空白。因此，white-space可以决定图文内容是否在一行显示（回车空格是否生效），是否显示大段连续空白（空格是否\n生效）等。")]),t._v(" "),s("p",[t._v("其属性值包括下面这些。")]),t._v(" "),s("ul",[s("li",[t._v("normal：合并空白字符和换行符。")]),t._v(" "),s("li",[t._v("pre：空白字符不合并，并且内容只在有换行符的地方换行。")]),t._v(" "),s("li",[t._v("nowrap：该值和normal一样会合并空白字符，但不允许文本环绕。")]),t._v(" "),s("li",[t._v("pre-wrap：空白字符不合并，并且内容只在有换行符的地方换行，同时允许文本环绕。")]),t._v(" "),s("li",[t._v("pre-line：合并空白字符，但只在有换行符的地方换行，允许文本环绕。")])]),t._v(" "),s("h2",{attrs:{id:"隐藏元素的-background-image-到底加不加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐藏元素的-background-image-到底加不加载"}},[t._v("#")]),t._v(" 隐藏元素的 background-image 到底加不加载？")]),t._v(" "),s("p",[t._v("根据测试，一个元素如果display计算值为none，在IE浏览器下（IE8～IE11，更高版本不确定）依然会发送图片请求，Fire\nfox浏览器不会，至于Chrome和Safari浏览器则似乎更加智能一点：如果隐藏元素同时又设置了background-image，则图片\n依然会去加载；如果是父元素的display计算值为none，则背景图不会请求，此时浏览器或许放心地认为这个背景图暂时是不会使\n用的。")]),t._v(" "),s("p",[t._v("如果不是background-image，而是"),s("code",[t._v("<img>")]),t._v("元素，则设置display:none在所有浏览器下依旧都会请求图片资源。")]),t._v(" "),s("p",[t._v("还需要注意的是如果设置的样式没有对应的元素，则background-image也不会加载。hover情况下的background-image，在触\n发时加载。")]),t._v(" "),s("p",[s("strong",[t._v("回答：")]),s("br"),t._v("\n（1）元素的背景图片")]),t._v(" "),s("p",[t._v("-元素本身设置 display:none，会请求图片 -父级元素设置 display:none，不会请求图片 -样式没有元素使用，不会请求\n-:hover 样式下，触发时请求")]),t._v(" "),s("p",[t._v("（2）img 标签图片任何情况下都会请求图片")]),t._v(" "),s("h2",{attrs:{id:"如何实现单行-多行文本溢出的省略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现单行-多行文本溢出的省略"}},[t._v("#")]),t._v(" 如何实现单行／多行文本溢出的省略（...）？")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*单行文本溢出*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ellipsis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*多行文本溢出*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.5em"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*高度为需要显示的行数*行高，比如这里我们显示两行，则为3*/")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3em"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:after")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("bottom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"常见的元素隐藏方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的元素隐藏方式"}},[t._v("#")]),t._v(" 常见的元素隐藏方式？")]),t._v(" "),s("ul",[s("li",[t._v("使用 display:none;隐藏元素，渲染树不会包含该渲染对象，因此该元素不会在页面中占据位置，也不会响应绑定的监听事件。")]),t._v(" "),s("li",[t._v("使用 visibility:hidden;隐藏元素。元素在页面中仍占据空间，但是不会响应绑定的监听事件。")]),t._v(" "),s("li",[t._v("使用 opacity:0;将元素的透明度设置为 0，以此来实现元素的隐藏。元素在页面中仍然占据空间，并且能够响应元素绑定的监听事件。")]),t._v(" "),s("li",[t._v("通过使用绝对定位将元素移除可视区域内，以此来实现元素的隐藏。")]),t._v(" "),s("li",[t._v("通过 z-index 负值，来使其他元素遮盖住该元素，以此来实现隐藏。")]),t._v(" "),s("li",[t._v("通过 clip/clip-path 元素裁剪的方法来实现元素的隐藏，这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")]),t._v(" "),s("li",[t._v("通过 transform:scale(0,0)来将元素缩放为 0，以此来实现元素的隐藏。这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")])]),t._v(" "),s("h2",{attrs:{id:"实现一个宽高自适应的正方形"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个宽高自适应的正方形"}},[t._v("#")]),t._v(" 实现一个宽高自适应的正方形")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*1.第一种方式是利用vw来实现*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".square")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10vw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomato"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*2.第二种方式是利用元素的margin/padding百分比是相对父元素width的性质来实现*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".square")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding-top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*3.第三种方式是利用子元素的margin-top的值来实现的*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".square")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yellow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".square::after")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"你知道-css-中不同属性设置为百分比-时对应的计算基准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你知道-css-中不同属性设置为百分比-时对应的计算基准"}},[t._v("#")]),t._v(" 你知道 CSS 中不同属性设置为百分比%时对应的计算基准？")]),t._v(" "),s("p",[t._v("公式：当前元素某CSS属性值 = 基准 * 对应的百分比")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("元素的 position 为 relative 和 absolute 时，top和bottom、left和right基准分别为包含块的 height、width")])]),t._v(" "),s("li",[s("p",[t._v("元素的 position 为 fixed 时，top和bottom、left和right基准分别为初始包含块（也就是视口）的 height、width，移动设备较为复杂，基准为 Layout viewport 的 height、width")])]),t._v(" "),s("li",[s("p",[t._v("元素的 height 和 width 设置为百分比时，基准分别为包含块的 height 和 width")])]),t._v(" "),s("li",[s("p",[t._v("元素的 margin 和 padding 设置为百分比时，基准为包含块的 width（易错）")])]),t._v(" "),s("li",[s("p",[t._v("元素的 border-width，不支持百分比")])]),t._v(" "),s("li",[s("p",[t._v("元素的 text-indent，基准为包含块的 width")])]),t._v(" "),s("li",[s("p",[t._v("元素的 border-radius，基准为分别为自身的height、width")])]),t._v(" "),s("li",[s("p",[t._v("元素的 background-size，基准为分别为自身的height、width")])]),t._v(" "),s("li",[s("p",[t._v("元素的 translateX、translateY，基准为分别为自身的height、width")])]),t._v(" "),s("li",[s("p",[t._v("元素的 line-height，基准为自身的 font-size")])]),t._v(" "),s("li",[s("p",[t._v("元素的 font-size，基准为父元素字体")])])]),t._v(" "),s("h2",{attrs:{id:"如何减少回流-浏览器绘制过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何减少回流-浏览器绘制过程"}},[t._v("#")]),t._v(" 如何减少回流？（浏览器绘制过程）")]),t._v(" "),s("p",[t._v("（1）使用 transform 替代 top")]),t._v(" "),s("p",[t._v("（2）不要把节点的属性值放在一个循环里当成循环里的变量")]),t._v(" "),s("p",[t._v("（3）不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局")]),t._v(" "),s("p",[t._v("（4）把 DOM 离线后修改。如：使用 documentFragment 对象在内存里操作 DOM")]),t._v(" "),s("p",[t._v("（5）不要一条一条地修改 DOM 的样式。与其这样，还不如预先定义好 css 的 class，然后修改 DOM 的 className。")]),t._v(" "),s("h2",{attrs:{id:"请描述一下-cookies-sessionstorage-和-localstorage-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请描述一下-cookies-sessionstorage-和-localstorage-的区别"}},[t._v("#")]),t._v(" 请描述一下 cookies，sessionStorage 和 localStorage 的区别？")]),t._v(" "),s("p",[t._v("浏览器端常用的存储技术是 cookie 、localStorage 和 sessionStorage。")]),t._v(" "),s("p",[t._v("cookie 其实最开始是服务器端用于记录用户状态的一种方式，由服务器设置，在客户端存储，然后每次发起同源请求时，发送给服务器端。cookie 最多能存储 4 k 数据，它的生存时间由 expires 属性指定，并且 cookie 只能被同源的页面访问共享。")]),t._v(" "),s("p",[t._v("sessionStorage 是 html5 提供的一种浏览器本地存储的方法，它借鉴了服务器端 session 的概念，代表的是一次会话中所保存的数据。它一般能够存储 5M 或者更大的数据，它在当前窗口关闭后就失效了，并且 sessionStorage 只能被同一个窗口的同源页面所访问共享。")]),t._v(" "),s("p",[t._v("localStorage 也是 html5 提供的一种浏览器本地存储的方法，它一般也能够存储 5M 或者更大的数据。它和 sessionStorage 不同的是，除非手动删除它，否则它不会失效，并且 localStorage 也只能被同源页面所访问共享。")]),t._v(" "),s("p",[t._v("上面几种方式都是存储少量数据的时候的存储方式，当我们需要在本地存储大量数据的时候，我们可以使用浏览器的 indexDB 这是浏览器提供的一种本地的数据库存储机制。它不是关系型数据库，它内部采用对象仓库的形式存储数据，它更接近 NoSQL 数据库。")]),t._v(" "),s("h2",{attrs:{id:"如何实现浏览器内多个标签页之间的通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现浏览器内多个标签页之间的通信"}},[t._v("#")]),t._v(" 如何实现浏览器内多个标签页之间的通信?")]),t._v(" "),s("p",[t._v("实现多个标签页之间的通信，本质上都是通过中介者模式来实现的。因为标签页之间没有办法直接通信，因此我们可以找一个中介者，让标签页和中介者进行通信，然后让这个中介者来进行消息的转发。")]),t._v(" "),s("p",[t._v("第一种实现的方式是使用 websocket 协议，因为 websocket 协议可以实现服务器推送，所以服务器就可以用来当做这个中介者。标签页通过向服务器发送数据，然后由服务器向其他标签页推送转发。")]),t._v(" "),s("p",[t._v("第二种是使用 ShareWorker 的方式，shareWorker 会在页面存在的生命周期内创建一个唯一的线程，并且开启多个页面也只会使用同一个线程。这个时候共享线程就可以充当中介者的角色。标签页间通过共享一个线程，然后通过这个共享的线程来实现数据的交换。")]),t._v(" "),s("p",[t._v("第三种方式是使用 localStorage 的方式，我们可以在一个标签页对 localStorage 的变化事件进行监听，然后当另一个标签页修改数据的时候，我们就可以通过这个监听事件来获取到数据。这个时候 localStorage 对象就是充当的中介者的角色。")]),t._v(" "),s("p",[t._v("还有一种方式是使用 postMessage 方法，如果我们能够获得对应标签页的引用，我们就可以使用 postMessage 方法，进行通信。")]),t._v(" "),s("h2",{attrs:{id:"如何在页面上实现一个圆形的可点击区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何在页面上实现一个圆形的可点击区域"}},[t._v("#")]),t._v(" 如何在页面上实现一个圆形的可点击区域？")]),t._v(" "),s("p",[t._v("（1）纯 html 实现，使用 "),s("code",[t._v("<area>")]),t._v("来给"),s("code",[t._v("<img>")]),t._v("图像标记热点区域的方式，"),s("code",[t._v("<map>")]),t._v(" 标签用来定义一个客户端图像映射，"),s("code",[t._v("<area>")]),t._v("标签用来定义图像映射中的区域，area 元素永远嵌套在 map 元素内部，我们可以将 area 区域设置为圆形，从而实现可点击的圆形区域。")]),t._v(" "),s("p",[t._v("（2）纯 css 实现，使用 border- ，当 border-radius 的长度等于宽高相等的元素值的一半时，即可实现一个圆形的点击区域。")]),t._v(" "),s("p",[t._v("（3）纯 js 实现，判断一个点在不在圆上的简单算法，通过监听文档的点击事件，获取每次点击时鼠标的位置，判断该位置是否在我们规定的圆形区域内。")]),t._v(" "),s("h2",{attrs:{id:"attribute-和-property-的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attribute-和-property-的区别是什么"}},[t._v("#")]),t._v(" attribute 和 property 的区别是什么？")]),t._v(" "),s("p",[t._v("attribute 是 dom 元素在文档中作为 html 标签拥有的属性；property 就是 dom 元素在 js 中作为对象拥有的属性。")]),t._v(" "),s("p",[t._v("对于 html 的标准属性来说，attribute 和 property 是同步的，是会自动更新的，但是对于自定义的属性来说，他们是不同步的。")])])}),[],!1,null,null,null);a.default=e.exports}}]);